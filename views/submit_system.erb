<% if user %>
<% if has_completed %>
<div class="row">
  <div class="col-sm-12">
    <div class="card card-block">
      <p class="card-text text-center">You already completed this system on <%= has_completed.strftime("%B %-d, %Y") %>!</p>
    </div>
  </div>
</div>
<% end %>
<div class="row">
  <div class="col-sm-12">
    <div class="card">
      <h6 class="card-header">Submit via CLI</h6>
      <pre class="card-pre">curl <%= domain %>/systems/<%= system['id'] %>/input/ > <%= system['id'] %>_input.txt
python your_script.py &lt; <%= system['id'] %>_input.txt &gt; <%= system['id'] %>_output.txt
curl --data-binary "@<%= system['id'] %>_output.txt" <%= domain %>/systems/<%= system['id'] %>/output/?token=<%= upload_token %></pre>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-sm-12">
    <div class="card">
      <h6 class="card-header">Submit via RunKit</h6>
      <div id="runkit-submit">
require("request")
var rp = require("request-promise")

function solve(input) {
    console.log(input)
    output = []
    input.split("\n").forEach(function(line) {
        output.push(line);
    });
    joined = output.join("\n")
    console.log(joined)
    return joined
}

async function download(sid) {
    var url = "https://systemsandpapers.com/systems/"+sid+"/input/"
    return (await rp(url))
}

async function upload(sid, data, token) {
    var url = "https://systemsandpapers.com/systems/"+sid+"/output/"
    return (await rp({qs: {token: token}, uri: url, method: 'POST', body: data}))
}

var pid = "<%= system['id'] %>"
var token = "<%= upload_token %>"
await upload(pid, solve(await download(pid)), token)</div>
    </div>
  </div>
</div>
<script src="https://embed.runkit.com" data-element-id="runkit-submit"></script>
<% else %>
<div class="row">
  <div class="col-sm-12">
    <div class="card card-block">
      <p class="card-text text-center">You'll need to <a href="/login/">log in</a> to submit solutions.</p>
    </div>
  </div>
</div>
<% end %>
